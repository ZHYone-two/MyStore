/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-02-12 10:34:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages.lend;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class lendListIndex2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');

    String path=request.getContextPath();
    String basePath=request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <title>借阅管理</title>\n");
      out.write("    <meta name=\"renderer\" content=\"webkit\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("lib/layui-v2.5.5/css/layui.css\" media=\"all\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("css/public.css\" media=\"all\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"layuimini-container\">\n");
      out.write("    <div class=\"layuimini-main\">\n");
      out.write("\n");
      out.write("        <div class=\"layuimini-main\">\n");
      out.write("            <div class=\"demoTable\">\n");
      out.write("                <div class=\"layui-form-item layui-form \">\n");
      out.write("                    借书卡\n");
      out.write("                    <div class=\"layui-inline\">\n");
      out.write("                        <input class=\"layui-input\" name=\"cardnumber\" id=\"cardnumber\" autocomplete=\"off\">\n");
      out.write("                    </div>\n");
      out.write("                    书名称\n");
      out.write("                    <div class=\"layui-inline\">\n");
      out.write("                        <input class=\"layui-input\" name=\"name\" id=\"name\" autocomplete=\"off\">\n");
      out.write("                    </div>\n");
      out.write("                    归还类型\n");
      out.write("                    <div class=\"layui-inline\">\n");
      out.write("                        <select class=\"layui-input\" name=\"type\" id=\"type\">\n");
      out.write("                            <option value=\"\"></option>\n");
      out.write("                            <option value=\"0\">正常还书</option>\n");
      out.write("                            <option value=\"1\">延迟还书</option>\n");
      out.write("                            <option value=\"2\">破损还书</option>\n");
      out.write("                            <option value=\"3\">丢失</option>\n");
      out.write("                        </select>\n");
      out.write("                    </div>\n");
      out.write("                    图书类型\n");
      out.write("                    <div class=\"layui-inline\">\n");
      out.write("                        <select class=\"layui-input\" name=\"status\" id=\"status\">\n");
      out.write("                            <option value=\"\"></option>\n");
      out.write("                            <option value=\"0\">未借出</option>\n");
      out.write("                            <option value=\"1\">在借中..</option>\n");
      out.write("                        </select>\n");
      out.write("                    </div>\n");
      out.write("                    <button class=\"layui-btn\" data-type=\"reload\">高级查询</button>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <script type=\"text/html\" id=\"toolbarDemo\">\n");
      out.write("            <div class=\"layui-btn-container\">\n");
      out.write("                <button class=\"layui-btn layui-btn-normal layui-btn-sm data-add-btn\" lay-event=\"add\"> 借书 </button>\n");
      out.write("                <button class=\"layui-btn layui-btn-normal layui-btn-sm data-add-btn\" lay-event=\"back\"> 还书 </button>\n");
      out.write("               ");
      out.write("\n");
      out.write("            </div>\n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("        <table class=\"layui-hide\" id=\"currentTableId\" lay-filter=\"currentTableFilter\"></table>\n");
      out.write("\n");
      out.write("     ");
      out.write("\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("<script src=\"");
      out.print(basePath);
      out.write("lib/layui-v2.5.5/layui.js\" charset=\"utf-8\"></script>\n");
      out.write("<script>\n");
      out.write("    layui.use(['form', 'table'], function () {\n");
      out.write("        var $ = layui.jquery,\n");
      out.write("            form = layui.form,\n");
      out.write("            table = layui.table;\n");
      out.write("\n");
      out.write("        table.render({\n");
      out.write("            elem: '#currentTableId',\n");
      out.write("            url: '");
      out.print(basePath);
      out.write("lendListAll',//查询借阅图书记录\n");
      out.write("            toolbar: '#toolbarDemo',\n");
      out.write("            defaultToolbar: ['filter', 'exports', 'print', {\n");
      out.write("                title: '提示',\n");
      out.write("                layEvent: 'LAYTABLE_TIPS',\n");
      out.write("                icon: 'layui-icon-tips'\n");
      out.write("            }],\n");
      out.write("            cols: [[\n");
      out.write("                {type: \"checkbox\", width: 50},\n");
      out.write("               // {field: 'id', width: 100, title: 'ID', sort: true},\n");
      out.write("                {templet: '<div><a href=\"javascript:void(0)\" style=\"color:#00b7ee\" lay-event=\"bookInfoEvent\">{{d.bookInfo.name}}</a></div>',\n");
      out.write("                    width: 280, title: '书名称'},\n");
      out.write("                //{templet: '<div>{{d.reader.cardnumber}}</div>', width: 118, title: '借书卡'},\n");
      out.write("                //{templet: '<div><a href=\"javascript:void(0)\" style=\"color:#00b7ee\" lay-event=\"readerInfoEvent\">{{d.reader.name}}</a></div>',\n");
      out.write("                   // width: 80, title: '借阅人'},\n");
      out.write("                // {templet: '<div>{{d.reader.name}}</div>', width: 80, title: '借阅人'},\n");
      out.write("                //{templet:\"<div>{{layui.util.toDateString(d.lendDate,'yyyy-MM-dd HH:mm:ss')}}</div>\", width: 150, title: '借阅时间'},\n");
      out.write("                //{field: 'backDate', width: 180, title: '还书时间'},\n");
      out.write("            /*    {title:\"还书类型\",minWidth: 120,templet:function(res){\n");
      out.write("                        if(res.type=='0'){\n");
      out.write("                            return '<span class=\"layui-badge layui-bg-green\">正常</span>'\n");
      out.write("                        }else if(res.type=='1'){\n");
      out.write("                            return '<span class=\"layui-badge layui-bg-gray\">延迟还书</span>'\n");
      out.write("\n");
      out.write("                        }else if(res.type=='2'){\n");
      out.write("                            return '<span class=\"layui-badge layui-bg-yellow\">破损还书</span>'\n");
      out.write("\n");
      out.write("                            return '<span class=\"layui-badge layui-bg-green\">丢失图书</span>'\n");
      out.write("\n");
      out.write("                        }else{\n");
      out.write("                            return '<span class=\"layui-badge layui-bg-red\">在借中</span>'\n");
      out.write("\n");
      out.write("                        }\n");
      out.write("                    }},*/\n");
      out.write("                {title: '操作', minWidth: 150, toolbar: '#currentTableBar', align: \"center\"}\n");
      out.write("            ]],\n");
      out.write("            limits: [10, 15, 20, 25, 50, 100],\n");
      out.write("            limit: 15,\n");
      out.write("            page: true,\n");
      out.write("            skin: 'line',\n");
      out.write("            id:'testReload'\n");
      out.write("        });\n");
      out.write("\n");
      out.write("\n");
      out.write("        var $ = layui.$, active = {\n");
      out.write("            reload: function(){\n");
      out.write("                var name = $('#name').val();\n");
      out.write("                var cardnumber = $('#cardnumber').val();\n");
      out.write("                var type = $('#type').val();\n");
      out.write("                var status = $('#status').val();\n");
      out.write("                console.log(name)\n");
      out.write("                //执行重载\n");
      out.write("                table.reload('testReload', {\n");
      out.write("                    page: {\n");
      out.write("                        curr: 1 //重新从第 1 页开始\n");
      out.write("                    }\n");
      out.write("                    ,where: {\n");
      out.write("                        type:type,\n");
      out.write("                        name: name,\n");
      out.write("                        cardnumber:cardnumber,\n");
      out.write("                        status:status\n");
      out.write("                    }\n");
      out.write("                }, 'data');\n");
      out.write("            }\n");
      out.write("        };\n");
      out.write("\n");
      out.write("\n");
      out.write("        $('.demoTable .layui-btn').on('click', function(){\n");
      out.write("            var type = $(this).data('type');\n");
      out.write("            active[type] ? active[type].call(this) : '';\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        /**\n");
      out.write("         * tool操作栏监听事件\n");
      out.write("         */\n");
      out.write("        table.on('tool(currentTableFilter)', function (obj) {\n");
      out.write("            var data=obj.data;\n");
      out.write("            if (obj.event === 'edit') {  // 监听添加操作\n");
      out.write("                var index = layer.open({\n");
      out.write("                    title: '异常还书',\n");
      out.write("                    type: 2,\n");
      out.write("                    shade: 0.2,\n");
      out.write("                    maxmin:true,\n");
      out.write("                    shadeClose: true,\n");
      out.write("                    area: ['60%', '60%'],\n");
      out.write("                    content: '");
      out.print(basePath);
      out.write("excBackBook?id='+data.id+\"&bookId=\"+data.bookId,\n");
      out.write("                });\n");
      out.write("                $(window).on(\"resize\", function () {\n");
      out.write("                    layer.full(index);\n");
      out.write("                });\n");
      out.write("            } else if (obj.event === 'delete') {  // 监听删除操作\n");
      out.write("                layer.confirm('确认删除吗', function (index) {\n");
      out.write("                    //调用删除功能\n");
      out.write("                    //获取记录信息的id集合\n");
      out.write("                    var ids=getCheackId(data);//借阅记录的id集合\n");
      out.write("                    var bookIds=getCheackBookId(data);//图书的id集合\n");
      out.write("                    deleteInfoByIds(data.id,data.bookIds,index);\n");
      out.write("                    layer.close(index);\n");
      out.write("                });\n");
      out.write("            }else if( obj.event === 'bookInfoEvent') {//书的借阅线\n");
      out.write("                layer.msg(\"书的借阅线\")\n");
      out.write("                //获取书的id\n");
      out.write("                var bid=data.bookId;\n");
      out.write("                queryLookBookList(\"book\",bid);\n");
      out.write("            }else{//读者借阅线\n");
      out.write("                //获取读者的id\n");
      out.write("                var rid=data.readerId;\n");
      out.write("                queryLookBookList(\"user\",rid);\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        /**\n");
      out.write("         * 借阅线打开内容\n");
      out.write("         */\n");
      out.write("        function queryLookBookList(flag,id){\n");
      out.write("            var index = layer.open({\n");
      out.write("                title: '借阅时间线',\n");
      out.write("                type: 2,\n");
      out.write("                shade: 0.2,\n");
      out.write("                maxmin:true,\n");
      out.write("                shadeClose: true,\n");
      out.write("                area: ['60%', '60%'],\n");
      out.write("                content: '");
      out.print(basePath);
      out.write("queryLookBookList?id='+id+\"&flag=\"+flag,\n");
      out.write("            });\n");
      out.write("            $(window).on(\"resize\", function () {\n");
      out.write("                layer.full(index);\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("        //监听表格复选框选择\n");
      out.write("        table.on('checkbox(currentTableFilter)', function (obj) {\n");
      out.write("            console.log(obj)\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        /**\n");
      out.write("         * 获取选中记录的id信息\n");
      out.write("         */\n");
      out.write("        function getCheackId(data){\n");
      out.write("            var arr=new Array();\n");
      out.write("            for(var i=0;i<data.length;i++){\n");
      out.write("                arr.push(data[i].id);\n");
      out.write("            }\n");
      out.write("            //拼接id\n");
      out.write("            return arr.join(\",\");\n");
      out.write("        };\n");
      out.write("\n");
      out.write("\n");
      out.write("        /**\n");
      out.write("         * 获取选中记录的中图书id集合*/\n");
      out.write("        function getCheackBookId(data){\n");
      out.write("            var arr=new Array();\n");
      out.write("            for(var i=0;i<data.length;i++){\n");
      out.write("                arr.push(data[i].bookId);\n");
      out.write("            }\n");
      out.write("            //拼接id\n");
      out.write("            return arr.join(\",\");\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        /**\n");
      out.write("         * 提交删除功能\n");
      out.write("         */\n");
      out.write("        function deleteInfoByIds(ids ,bookIds,index){\n");
      out.write("            //向后台发送请求\n");
      out.write("            $.ajax({\n");
      out.write("                url: \"deleteLendListByIds\",\n");
      out.write("                type: \"POST\",\n");
      out.write("                data: {ids: ids,bookIds:bookIds},\n");
      out.write("                success: function (result) {\n");
      out.write("                    if (result.code == 0) {//如果成功\n");
      out.write("                        layer.msg('删除成功', {\n");
      out.write("                            icon: 6,\n");
      out.write("                            time: 500\n");
      out.write("                        }, function () {\n");
      out.write("                            parent.window.location.reload();\n");
      out.write("                            var iframeIndex = parent.layer.getFrameIndex(window.name);\n");
      out.write("                            parent.layer.close(iframeIndex);\n");
      out.write("                        });\n");
      out.write("                    } else {\n");
      out.write("                        layer.msg(\"删除失败\");\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            })\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        /**\n");
      out.write("         * 提交还书功能\n");
      out.write("         */\n");
      out.write("        function backBooksByIds(ids ,bookIds,index){\n");
      out.write("            //向后台发送请求\n");
      out.write("            $.ajax({\n");
      out.write("                url: \"backLendListByIds\",\n");
      out.write("                type: \"POST\",\n");
      out.write("                data: {ids: ids,bookIds:bookIds},\n");
      out.write("                success: function (result) {\n");
      out.write("                    if (result.code == 0) {//如果成功\n");
      out.write("                        layer.msg('还书成功', {\n");
      out.write("                            icon: 6,\n");
      out.write("                            time: 500\n");
      out.write("                        }, function () {\n");
      out.write("                            parent.window.location.reload();\n");
      out.write("                            var iframeIndex = parent.layer.getFrameIndex(window.name);\n");
      out.write("                            parent.layer.close(iframeIndex);\n");
      out.write("                        });\n");
      out.write("                    } else {\n");
      out.write("                        layer.msg(\"还书失败\");\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            })\n");
      out.write("        };\n");
      out.write("        /**\n");
      out.write("         * toolbar监听事件\n");
      out.write("         */\n");
      out.write("        table.on('toolbar(currentTableFilter)', function (obj) {\n");
      out.write("            if (obj.event === 'add') {  // 监听添加操作\n");
      out.write("                var index = layer.open({\n");
      out.write("                    title: '借书管理',\n");
      out.write("                    type: 2,\n");
      out.write("                    shade: 0.2,\n");
      out.write("                    maxmin:true,\n");
      out.write("                    shadeClose: true,\n");
      out.write("                    area: ['60%', '60%'],\n");
      out.write("                    content: '");
      out.print(basePath);
      out.write("addLendList',\n");
      out.write("                });\n");
      out.write("                $(window).on(\"resize\", function () {\n");
      out.write("                    layer.full(index);\n");
      out.write("                });\n");
      out.write("            }else if (obj.event === 'back'){//还书操作\n");
      out.write("                //获取选中的记录信息\n");
      out.write("                //获取选中的记录信息\n");
      out.write("                var checkStatus=table.checkStatus(obj.config.id);\n");
      out.write("                debugger;\n");
      out.write("                var data=checkStatus.data;\n");
      out.write("\n");
      out.write("                if(data.length==0){//如果没有选中信息\n");
      out.write("                    layer.msg(\"请选择要借阅还书的记录信息\");\n");
      out.write("                }else{\n");
      out.write("                    //获取记录信息的id集合\n");
      out.write("                    var ids=getCheackId(data);//借阅记录的id集合\n");
      out.write("                    var bookIds=getCheackBookId(data);//图书的id集合\n");
      out.write("                    layer.confirm('确定还书么', function (index) {\n");
      out.write("                        //调用还书功能\n");
      out.write("                        backBooksByIds(ids,bookIds,index);\n");
      out.write("                        layer.close(index);\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            } else if (obj.event === 'delete') {\n");
      out.write("                /*\n");
      out.write("                  1、提示内容，必须删除大于0条\n");
      out.write("                  2、获取要删除记录的id信息\n");
      out.write("                  3、提交删除功能 ajax\n");
      out.write("                */\n");
      out.write("                //获取选中的记录信息\n");
      out.write("                var checkStatus=table.checkStatus(obj.config.id);\n");
      out.write("                var data=checkStatus.data;\n");
      out.write("                if(data.length==0){//如果没有选中信息\n");
      out.write("                    layer.msg(\"请选择要删除的记录信息\");\n");
      out.write("                }else{\n");
      out.write("                    //获取记录信息的id集合\n");
      out.write("                    var ids=getCheackId(data);//借阅记录的id集合\n");
      out.write("                    var bookIds=getCheackBookId(data);//图书的id集合\n");
      out.write("                    layer.confirm('确认删除吗', function (index) {\n");
      out.write("                        //调用删除功能\n");
      out.write("                        deleteInfoByIds(ids,bookIds,index);\n");
      out.write("                        layer.close(index);\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
